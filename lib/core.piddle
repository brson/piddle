meta (module)
meta (feature intrinsics)

istruct Nil
attr (istruct itype nil) {
    inner: itype nil
}

istruct Int32
attr (istruct itype int32) {
    inner: itype int32
}

ifn nil_from_intr (inner: itype int32) -> Int32 {
    make Int32 { inner }
}

fn wrapping_add (a: Int32, b: Int32) -> Int32 {
    set a_inner a.inner
    set b_inner b.inner
    call intr_wrapping_add (a_inner, b_inner)
}

fn wrapping_add_expr (a: Int32, b: Int32) -> Int32 {
    call intr_wrapping_add (a.inner, b.inner)
}

fn wrapping_add_annotated (a: Int32, b: Int32): (Int32, Int32) -> Int32 {
    set a_inner: itype int32 a.inner: itype int32
    set b_inner: itype int32 b.inner: itype int32
    call icall_wrapping_add (a_inner: itype int32 b_inner: itype int32): (itype int32, itype int32)
}

fn wrapping_add_tuple args: (Int32, Int32) -> Int32 {
    set (a, b) args
    ...
}

fn icall_wrapping_add (a itype int32, b itype int32) -> itype int32 {
    icall i32_wrapping_add (a b)
}
